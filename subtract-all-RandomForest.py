# -*- coding: utf-8 -*-
"""subtract-all-Randomforest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HQQRDyVLLjknUHvdaf-o9hWAFJxGElRW
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
# %matplotlib inline
import numpy as np 

from tensorflow import random
np.random.seed(1235456)
from keras.utils.np_utils import to_categorical  
import seaborn as sns; sns.set()
from sklearn.metrics import f1_score, precision_score, recall_score, accuracy_score, confusion_matrix, plot_confusion_matrix, classification_report
from sklearn import metrics

#train
train_target = pd.read_csv("drive/MyDrive/csv/subtract-neo4j/resample-subtract-neo4j-train-target-method.csv")
train_features = pd.read_csv("drive/MyDrive/csv/subtract-neo4j/resample-subtract-neo4j-train-features-method.csv")

#test
test_target = pd.read_csv("drive/MyDrive/csv/subtract-neo4j/scaler-subtract-neo4j-test-target-method.csv")
test_features = pd.read_csv("drive/MyDrive/csv/subtract-neo4j/scaler-subtract-neo4j-test-features-method.csv")

train_features.shape[1]

from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(n_estimators=1000, random_state=0)
model.fit(train_features, train_target["Number of Bugs"])

y_pred = model.predict(test_features)
y_pred

print('Test F1:', f1_score(test_target, y_pred, average='micro'))
print('Test Pr:', precision_score(test_target, y_pred, average='micro'))
print('Test Rc:', recall_score(test_target, y_pred, average='micro'))

from sklearn.metrics import accuracy_score
print('\nTest Ac:', accuracy_score(test_target, y_pred))

cm = confusion_matrix(test_target, y_pred)
print(cm)
print(classification_report(test_target, y_pred))


TP = cm[0][0]
TN = cm[1][1]
FP = cm[0][1]
FN = cm[1][0]

Pr = TP / (TP+FP) #?
Rc = TP / (TP+FN)
F1 = 2*(Pr*Rc)/(Pr+Rc)
acc = (TP+TN)/(TP+FP+FN+TN)
print('\naccuracy:  ', acc)
print('Precision: ', Pr)
print('Recall:    ', Rc)
print('F1:        ', F1)